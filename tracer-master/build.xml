<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="tracer">
    <property environment="env"/>
    <property name="ClassDirectory" value="build/classes/"/>
    <property name="TestDirectory" value="build/test/"/>
    <property name="SourceDirectory" value="src"/> 
    <property name="DocDirectory" value="doc"/>
    <property name="JavaDocDirectory" value="${DocDirectory}/web/javadoc"/>
    <property name="TempDirectory" value="tmp/"/>
    <property name="DistributionDirectory" value="dist"/>
    <property name="JavaPackage" value="eu.etrap.tracer"/>
    <property name="ProjectName" value="Tracer"/>
    <property name="TracerJar" value="tracer.jar"/>
    <property name="Name" value="${ProjectName} API for Detecting Historical Text Re-use"/>
    <property name="Release" value="1.0"/>
    
    
    
    <!-- =================================================================== --> 
    <!-- An dieser Stelle wird der Classpath fuer dieses Projekt zusammen-   -->
    <!-- gestellt.                                                           -->
    <!-- =================================================================== -->    
    <path id="prj.classpath">
        
        <pathelement location="conf"/>
        
        <!-- ================================================================= --> 
        <!-- Alle Klassen des Projektes. I. d. R. sollte dieser Ordner leer    -->
        <!-- sein, da alle relevanten Klassen sich bereits in jar-Files liegen.-->
        <!-- Falls nicht, dann ...                                             -->
        <!-- ================================================================= -->   
        <pathelement location="${ClassDirectory}"/>
        
        <!-- ================================================================= --> 
        <!-- Alle Jar-Files des Projektes werden in den Classpath gepackt.     -->
        <!-- An dieser Stelle befinden sich dann auch die Jar-Files, die aus   -->
        <!-- diesem Projekt hervorgegangen sind und fuer den Build-Prozess     -->
        <!-- von Bedeutung sind.                                               -->
        <!-- ================================================================= -->     
        <fileset dir="build/lib/">
            <include name="**/*.jar"/>
        </fileset>
        
        <fileset dir="${DistributionDirectory}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    
    <target name="meta">
        <property name="timestamp" value=""/>
        <property name="tracer.build.number" value="conf/build.number"/>
        <property name="printcp.projcp" refid="prj.classpath"/>
        
        <buildnumber file="${tracer.build.number}"/>
        
        <tstamp>
            <format property="BuildDate" pattern="dd-MMMM-yyyy hh:mm aa" locale="de"/>
        </tstamp>  
        
        
        <copy todir="tmp" file="conf/build.properties">
            <filterset>
                <filter token="NAME" value="${ProjectName}"/>
                <filter token="RELEASE_NUMBER" value="${Release}"/>
                <filter token="BUILD_NUMBER" value="${build.number}"/>
                <filter token="BUILD_DATE" value="${BuildDate}"/>
                <filter token="USER_NAME" value="${user.name}"/>
            </filterset>
        </copy>
        
        <echo message="BUILD VERSION:"/>
        <echo message="Name: ${ProjectName}"/>
        <echo message="Release: ${Release}"/>
        <echo message="Build number: B${build.number}"/>
        <echo message="Build date: ${BuildDate}"/>
        <echo message="Build user: ${user.name}"/>
    </target>
    
    <!-- =================================================================== -->   
    <!-- Dieses Target ist das ANT-Default-Target. Wird kein anderes Target  -->
    <!-- beim Starten von ANT angegeben, dann wird dieses Target benutzt.    -->
    <!-- =================================================================== -->    
    <target name="all">
        <antcall target="clean"/>        
        <antcall target="init"/>
        <antcall target="compile"/> 
        <antcall target="jar"/>
        <!--antcall target="doc"/-->
        <antcall target="meta"/>
        <antcall target="dist"/>
        <!--antcall target="zip"/-->
    </target>

    <target name="init">
        <mkdir dir="${ClassDirectory}"/>
		<mkdir dir="${TestDirectory}"/>
        <mkdir dir="${DistributionDirectory}"/>
        <mkdir dir="${TempDirectory}"/> 
    </target>
    
    <target name="compile" depends="init">
        <javac debug="on" destdir="${ClassDirectory}" srcdir="${SourceDirectory}/">
            <classpath refid="prj.classpath"/>
            <compilerarg  line="-Xlint:unchecked"/>
        </javac>
    </target>  
    
    <!-- =================================================================== -->
    <!-- Dieses Target erzeugt das Jar-File fuer den Serverbetrieb. Es       -->
    <!-- befinden sich ausschliesslich die notwendigen Klassen in diesem Jar -->
    <!-- File.                                                               -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">    
        <jar basedir="${ClassDirectory}" includes="**" jarfile="${DistributionDirectory}/${TracerJar}"/>
    </target>
    
    <target name="CleanClasses">
        <delete includeEmptyDirs="true" verbose="true">
            <fileset dir="build/classes/" includes="de/**"/>
        </delete>
    </target>

	<target name="test" depends="jar">
        <javac debug="on" destdir="${TestDirectory}" srcdir="test">
            <classpath refid="prj.classpath"/>
        </javac>
		<junit printsummary="on" haltonfailure="no">
			<classpath>
				<path refid="prj.classpath" />
                <pathelement location="${TestDirectory}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest fork="true">
				<fileset dir="test" includes="**/*.java" />
			</batchtest>
		</junit>
	</target>		

	<target name="release" depends="test">
    <!-- =================================================================== -->   
    <!-- TODO put everything on the public repo with version number          -->
    <!-- =================================================================== -->           
	</target>
    
    
    <!-- =================================================================== -->   
    <!-- Dieses Target gibt den Classpath aus, der waehrend des Build-       -->
    <!-- prozesses benutzt wird.                                             -->
    <!-- =================================================================== -->           
    <target name="printcp">
        <property name="printcp.projcp" refid="prj.classpath"/>
        <echo message=""/>
        <echo message="Project classpath: ${printcp.projcp}"/>
    </target>
    
    <!-- =================================================================== -->   
    <!-- Dieses Target raeumt das Projekt auf und loescht Dinge, die         -->
    <!-- generiert worden sind. Dieses Target sollte dementsprechend vor     -->
    <!-- einer CVS-Synchronisation aufgerufen werden.                        --> 
    <!-- =================================================================== -->    
    <target name="clean" depends="init">
        <!--Cleaning the classes directory"-->
        <!--
        <delete failonerror="false">
            <fileset dir="${ClassDirectory}" includes="**/*.*"/>
        </delete>	
        -->
        <delete dir="${ClassDirectory}"/> 

        <!--
        <delete failonerror="false">
            <fileset dir="${TestDirectory}" includes="**/*.*"/>
        </delete>
        -->    
        <delete dir="${TestDirectory}"/> 
        
        <!--
        <delete>
            <fileset dir="${DistributionDirectory}" includes="*.jar"/>
        </delete>  
        -->    
        <delete dir="${DistributionDirectory}"/> 
        
        <delete dir="${TempDirectory}"/> 
        
        <delete file="${TracerJar}"/>
    </target>
    
    <!-- =================================================================== -->   
    <!-- Dieses Target erstellt die JavaDocs.                                --> 
    <!-- =================================================================== -->      
    <target name="javadoc" description="Generating javadocs" depends="init">
        <property file="tmp/build.properties"/>
                <javadoc access="private" 
                 author="true"
                 bottom="2005-2013 Marco Büchler, Natural Language Processing Group, University of Leipzig, Germany. 2013-2016 Marco Büchler, Georg August University Göttingen, Göttingen, Germany" 
                 destdir="${JavaDocDirectory}/Tracer-${Release}" 
                 doctitle="${ProjectName} V${Release} (release date: ${date}, build: ${build}, build user: ${user})" 
                 packagenames="${JavaPackage}.*" 
                 sourcepath="${SourceDirectory}" 
                 version="true" 
                 windowtitle="${ProjectName} V${Release} (release date: ${date})"
                 encoding="UTF-8" 
                 charset="UTF-8" 
                 docencoding="UTF-8">
            <classpath refid="prj.classpath"/>
        </javadoc>           
    </target>

    
    <target name="java2html">
        <mkdir dir="${DocDirectory}/web/versions/${ProjectName}-${Version}/"/>
        
        <taskdef name="java2html"
                 classname="de.java2html.anttasks.Java2HtmlTask" 
                 classpathref="prj.classpath"
        />
        
        <java2html
            srcdir="src"
            destdir="${DocDirectory}/web/versions/${ProjectName}-${Version}/"
            includes="**/*.java"
            style="eclipse"
            showLineNumbers="true"
            showFileName="true"
            showTableBorder="true"
            outputFormat="html"
        />
        
        <java2html
            srcdir="src"
            destdir="${DocDirectory}/web/versions/${ProjectName}-${Version}/"
            includes="**/*.java"
            style="eclipse"
            showLineNumbers="true"
            showFileName="true"
            showTableBorder="true"
            outputFormat="tex"
        />
    </target> 
    
    <target name="dist">
        <jar destfile="${TracerJar}">
            <fileset dir="tmp" />
            <fileset dir="src" includes="**/*.java"/>
            <fileset dir="build/classes"/>
            
            <zipfileset src="build/lib/FileSort.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/activation.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/ant-1.10.5.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/asm-3.1.jar" includes="**/*.*"/-->
            <!--zipfileset src="build/lib/imap.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/jacksum.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/java2html.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/jaxen-1.1.1.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/jconfig.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/jdepend-2.9.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/joost.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/jsr173_1.0_api.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/jsr173_1.0_ri.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/junit-4.4.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/pcj.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/pmd-4.1.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/wstx-asl-3.9.0.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/xalan.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/xercesImpl.jar" includes="**/*.*"/>
            <!--zipfileset src="build/lib/mailapi.jar" includes="**/*.*"/-->
            <!--zipfileset src="build/lib/pop3.jar" includes="**/*.*"/-->
            <!--zipfileset src="build/lib/smtp.jar" includes="**/*.*"/-->
            <zipfileset src="build/lib/stax-1.2.0-dev.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/stax-api-1.0.1.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/Medusa.jar" includes="**/*.*"/>
	    <zipfileset src="build/lib/commons-math-2.1.jar" includes="**/*.*"/>
   	    <zipfileset src="build/lib/cooccaccess.jar" includes="**/*.*"/>
	    <zipfileset src="build/lib/mysql-connector-java-5.1.16-bin.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/TRVTransformer.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-io-2.5.jar" includes="**/*.*"/>
            
            
            <zipfileset src="build/lib/babelnet-api-3.7.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-beanutils-1.7.0.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-beanutils-core-1.7.0.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-codec-1.8.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-collections-3.2.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-configuration-1.5.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-digester-1.8.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-lang-2.3.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/commons-logging-1.2.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/gson-2.2.4.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/guava-18.0.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/httpclient-4.3.6.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/httpcore-4.3.3.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/icu4j-56.1.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/jltutils-2.2.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/jwi-2.2.3.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/log4j-api-2.1.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/log4j-core-2.1.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/lucene-core-4.9.0.jar" includes="**/*.*"/>
            <zipfileset src="build/lib/lucene-queryparser-4.9.0.jar" includes="**/*.*"/>
            
	    <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="eu.etrap.tracer.Tracer"/>
                <attribute name="Class-Path" value="conf/ ."/>    
            </manifest>
        </jar>
    </target>
    
    <!--target name="doc" depends="makeHandbook,makeRefCard,jdepend-to-graphviz,pmd,cpd,javadoc,java2html,checkstyle"/-->
    <!-- target name="doc" depends="makeHandbook,makeRefCard,javadoc,java2html,checkstyle"/ -->
    
    <!-- target name="zip" depends="doc">
        <property file="tmp/build.properties"/>
        
        <mkdir dir="${DocDirectory}/web/versions/${ProjectName}-${Version}/"/>
        
        <zip destfile="${DocDirectory}/web/versions/${ProjectName}-${Version}/${version}.zip" update="true">
            <zipfileset dir="." includes="traces.jar" prefix="${version}"/>
            <zipfileset dir="bin" includes="*.sh" prefix="${version}/bin"/>
            <zipfileset dir="conf" includes="build.properties,traces_config.xml" prefix="${version}/conf"/> 
            <zipfileset dir="data" excludes="corpora/release-test-corpora.tar.gz,corpora/small-release-test-corpora.tar.gz" prefix="${version}/data"/>
            <zipfileset dir="doc/" excludes="**/*.zip" prefix="${version}/doc/"/> 
            <zipfileset dir="src" includes="**/*.java" prefix="${version}/src"/>
            <zipfileset dir="tmp" includes="build.properties" prefix="${version}"/>
        </zip>
    </target -->
    
    <!-- no possible right now, dependency ant_file breaks build process with java9+ -->
    <!-- target name="makeRefCard">
        <property name="RefCardDirectory" value="doc/manual/TracesReferenceCard" />
        <property name="RefCardFile" value="TracesReferenceCard" />
        <property file="tmp/build.properties"/>
        
        <taskdef name="latex"    classname="de.dokutransdata.antlatex.LaTeX">
            <classpath refid="prj.classpath"/>
        </taskdef>      
        
        <latex  
            latexfile="${RefCardFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${RefCardDirectory}"  
        /> 
        <latex  
            latexfile="${RefCardFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${RefCardDirectory}"  
        />
        
        <latex  
            latexfile="${RefCardFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${RefCardDirectory}"  
        />
        
        <latex  
            latexfile="${RefCardFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${RefCardDirectory}"  
        />
        
        <exec executable="dvips">
            <arg value="-t"/>
            <arg value="landscape"/>
            <arg value="${RefCardDirectory}/${RefCardFile}.dvi"/>
            <arg value="-o"/>
            <arg value="${RefCardDirectory}/${RefCardFile}.ps"/>
        </exec>
        
        <exec executable="ps2pdf">
            <arg value="${RefCardDirectory}/${RefCardFile}.ps"/>
            <arg value="${RefCardDirectory}/${RefCardFile}.pdf"/>
        </exec>
        
        <mkdir dir="${DocDirectory}/web/versions/${ProjectName}-${Version}/refcards"/>
        <copy file="${RefCardDirectory}/${RefCardFile}.pdf" tofile="${DocDirectory}/web/versions/${ProjectName}-${Version}/refcards/${RefCardFile}-${Version}.pdf"/>
        <copy file="${RefCardDirectory}/${RefCardFile}.ps" tofile="${DocDirectory}/web/versions/${ProjectName}-${Version}/refcards/${RefCardFile}-${Version}.ps"/>
        <copy file="${RefCardDirectory}/${RefCardFile}.dvi" tofile="${DocDirectory}/web/versions/${ProjectName}-${Version}/refcards/${RefCardFile}-${Version}.dvi"/>
    </target>
    
    
    <target name="makeHandbook">
        <property name="HandbookDirectory" value="doc/manual/Medusa-Cookbook" />
        <property name="HandbookFile" value="Medusa-Cookbook" />
        <property file="tmp/build.properties"/>
        
        <taskdef name="latex"    classname="de.dokutransdata.antlatex.LaTeX">
            <classpath refid="prj.classpath"/>
        </taskdef>
        
        <latex  
            latexfile="${HandbookFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${HandbookDirectory}"  
        /> 
        
        <latex  
            latexfile="${HandbookFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${HandbookDirectory}"  
        /> 
        
        <latex  
            latexfile="${HandbookFile}.tex"  
            verbose="on"  
            clean="on"  
            pdftex="off"  
            workingDir="${HandbookDirectory}"  
        /> 
        
        
        <exec executable="dvips" dir="${HandbookDirectory}">
            <arg value="-t"/>
            <arg value="landscape"/>
            <arg value="${HandbookFile}.dvi"/>
            <arg value="-o"/>
            <arg value="${HandbookFile}.ps"/>
        </exec>
        
        <exec executable="ps2pdf" dir="${HandbookDirectory}">
            <arg value="${HandbookFile}.ps"/>
            <arg value="${HandbookFile}.pdf"/>
        </exec>
        
        <mkdir dir="${DocDirectory}/web/versions/${ProjectName}-${Version}/handbooks"/>
        <copy file="${HandbookDirectory}/${HandbookFile}.pdf" tofile="${DocDirectory}/web/versions/${ProjectName}-${Version}/handbooks/${HandbookFile}-${Version}.pdf"/>
        <copy file="${HandbookDirectory}/${HandbookFile}.ps" tofile="${DocDirectory}/web/versions/${ProjectName}-${Version}/handbooks/${HandbookFile}-${Version}.ps"/>
        <copy file="${HandbookDirectory}/${HandbookFile}.dvi" tofile="${DocDirectory}/web/versions/${ProjectName}-${Version}/handbooks/${HandbookFile}-${Version}.dvi"/>
    </target -->
    
    
    <target name="jdepend-to-graphviz"
            depends="compile"
            description="Runs JDepend and converts XML output into Graphviz">
        
        <property file="tmp/build.properties"/>
        <property environment="env"/>
        
        <property name="OutputDirectory" value="${DocDirectory}/web/release-test/results/${version}"/>
        <mkdir dir="${OutputDirectory}"/>
        
        <java classname="jdepend.xmlui.JDepend" fork="yes">
            <classpath refid="prj.classpath"/>
            <arg value="-file"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.xml"/>
            <arg value="${ClassDirectory}"/>
        </java>
        
        <xslt in="${OutputDirectory}/${version}-JDepend-Report.xml" 
              out="${OutputDirectory}/${version}-JDepend-Report.dot" 
              style="data/xml/jdepend2dot.xsl"/>
        
        <!-- for output formats see http://www.graphviz.org/cvs/doc/info/output.html-->
        <exec executable="dot">
            <arg value="-Tpng"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.dot"/>
            <arg value="-o"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.png"/>
        </exec>
        
        <exec executable="dot">
            <arg value="-Tfig"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.dot"/>
            <arg value="-o"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.fig"/>
        </exec>
        
        <exec executable="dot">
            <arg value="-Tpng"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.dot"/>
            <arg value="-o"/>
            <arg value="doc/web/release-test/results/dependence.png"/>
        </exec>
        
        <exec executable="dot">
            <arg value="-Tsvg"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.dot"/>
            <arg value="-o"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.svg"/>
        </exec>
        
        <exec executable="dot">
            <arg value="-Tplain-ext"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.dot"/>
            <arg value="-o"/>
            <arg value="${OutputDirectory}/${version}-JDepend-Report.txt"/>
        </exec>
    </target>
    
    
    <target name="pmd">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
            <classpath refid="prj.classpath"/>
        </taskdef>
        
        <property file="tmp/build.properties"/>
        <property name="OutputDirectory" value="${DocDirectory}/web/release-test/results/${version}"/>
        <mkdir dir="${OutputDirectory}"/>
        
        <!-- favorites -->
        <pmd rulesetfiles="basic,imports,braces,clone,codesize,controversial,coupling,design,finalizers,imports,javabeans,migrating,naming,optimizations,scratchpad,strictexception,strings,typeresolution,unusedcode">
            <formatter type="html" toFile="${OutputDirectory}/${version}-PMD-Report.html" toConsole="true"/>
            <fileset dir="${SourceDirectory}">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
    
    <target name="cpd">
        <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask">
            <classpath refid="prj.classpath"/>
        </taskdef>
        
        <property file="tmp/build.properties"/>
        <property name="OutputDirectory" value="${DocDirectory}/web/release-test/results/${version}"/>
        <mkdir dir="${OutputDirectory}"/>
        
        <cpd minimumTokenCount="100" outputFile="${OutputDirectory}/${version}-CPD-Report.txt">
            <fileset dir="${SourceDirectory}">
                <include name="**/*.java"/>
            </fileset>
        </cpd>
    </target>
    
    <target name="checkstyle">
        <taskdef name="checkstyle" classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
            <classpath refid="prj.classpath"/>
        </taskdef>
        
        <property file="tmp/build.properties"/>
        <property name="OutputDirectory" value="${DocDirectory}/web/release-test/results/${version}"/>
        <mkdir dir="${OutputDirectory}"/>
        
        <checkstyle config="data/xml/checkstyle/sun_checks.xml" maxErrors="2147483647">
            <fileset dir="src" includes="**/*.java"/>
            <formatter type="xml" toFile="${OutputDirectory}/${version}-Checkstyle-Report.xml"/>
        </checkstyle>
        
        <xslt in="${OutputDirectory}/${version}-Checkstyle-Report.xml" 
              out="${OutputDirectory}/${version}-Checkstyle-Report-Author.html" 
              style="data/xml/checkstyle/checkstyle-author.xsl"/>
        
        <xslt in="${OutputDirectory}/${version}-Checkstyle-Report.xml" 
              out="${OutputDirectory}/${version}-Checkstyle-Report-NoFramesSorted.html" 
              style="data/xml/checkstyle/checkstyle-noframes-sorted.xsl"/>
        
        <xslt in="${OutputDirectory}/${version}-Checkstyle-Report.xml" 
              out="${OutputDirectory}/${version}-Checkstyle-Report-Simple.html" 
              style="data/xml/checkstyle/checkstyle-simple.xsl"/>
    </target>
    
    
    <target name="jcsc">
        <taskdef name="jcsc" classname="rj.tools.jcsc.ant.JCSCTask">
            <classpath refid="prj.classpath"/>
        </taskdef>
        
        <property file="tmp/build.properties"/>
        <property name="OutputDirectory" value="${DocDirectory}/web/release-test/results/${version}"/>
        <mkdir dir="${OutputDirectory}"/>
        
        <jcsc rules="data/xml/jcsc/jcsc.xml" destdir="${OutputDirectory}" worstcount="20">
            <fileset dir="src" includes="**/*.java"/>
        </jcsc>
    </target>
</project>
